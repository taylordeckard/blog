[{"content":"As an introductory post, I\u0026rsquo;ll detail the steps to create a blog like this. It should only take a few minutes\u0026hellip;\nInstall Hugo Follow the steps here to install Hugo on your system. For me, on macOS, the command was:\nbrew install hugo Create a Site Next, you\u0026rsquo;ll want to use the hugo binary to create the project scaffolding for your site. Open up a terminal and enter the following command (substitute my_blog with the name of the directory you want to create the site in):\nhugo new site my_blog -f yml Then cd into the directory:\ncd my_blog At this point, you\u0026rsquo;ll want to pick a theme. I chose PaperMod. Instructions for adding a theme to your project can usually be found on the theme\u0026rsquo;s GitHub page. In my case, the install consisted of:\ngit clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 Also as part of the theme install, a line was added to config.yml:\ntheme: \u0026#34;PaperMod\u0026#34; At this point, your project should look something like this:\n. ├── archetypes │ └── default.md ├── config.yml ├── content ├── data ├── layouts ├── resources │ └── _gen ├── static └── themes └── PaperMod Configuring the Theme Usually detailed on the theme\u0026rsquo;s GitHub page, there are a variety of configuration options available. These can be set in config.yml. I copied the PaperMod example configuration and made a few adjustments.\nbaseURL: https://www.taylordeckard.me/ languageCode: en-us title: Taylor\u0026#39;s Blog theme: \u0026#34;PaperMod\u0026#34; baseURL: https://www.taylordeckard.me/blog enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false minify: disableXML: true minifyOutput: true params: env: production title: Taylor\u0026#39;s Blog description: \u0026#34;Things that happen to me\u0026#34; keywords: [Blog] author: taylordeckard DateFormat: \u0026#34;January 2, 2006\u0026#34; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: false ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: true disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false hideFooter: true showtoc: false tocopen: false label: text: \u0026#34;Home\u0026#34; # home-info mode homeInfoParams: Title: \u0026#34;Hi\u0026#34; Content: Welcome to my blog socialIcons: - name: github url: \u0026#34;https://github.com/taylordeckard\u0026#34; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page editPost: URL: \u0026#34;https://github.com/taylordeckard/blog/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] menu: main: - identifier: archives name: Archives url: /archives weight: 30 - identifier: search name: Search url: /search weight: 30 - identifier: taylordeckard name: taylordeckard.me url: https://taylordeckard.me weight: 30 outputs: home: - HTML - RSS - JSON Creating Content All of the markdown files you will create for your blog will go in the top-level /content directory. Right now it should be empty. There are a couple of files that are specific to the PaperMod theme and need to be created:\ncontent/archives.md\n--- title: \u0026#34;Archive\u0026#34; layout: \u0026#34;archives\u0026#34; summary: \u0026#34;archives\u0026#34; --- content/search.md\n--- title: \u0026#34;Search\u0026#34; layout: \u0026#34;search\u0026#34; --- Next, create a directory for all of your posts: content/posts. In this directory, you will have a markdown file for each post you make.\nFor my blog, for instance, I created hugo-tutorial.md:\ncontent ├── archives.md ├── posts │ └── hugo-tutorial.md └── search.md hugo-tutorial.md looks something like this:\n--- author: Taylor Deckard title: Meta date: 2021-01-19 description: Setting up a blog with Hugo --- As an introductory post, I\u0026#39;ll detail the steps to create a blog like this. It should only take a few minutes... ![It should only take a few minutes...](/blog/images/hugo-tutorial/dumb_and_dumber_watch.webp) ## Install Hugo ... Running Locally Once you have something similar, you should be able to run the blog locally. From the project root directory, run the following:\nhugo serve Then open a browser and navigate to [http://localhost:1313/blog]. (The /blog comes from the baseURL property set in the config.yml)\nNext steps This is a good start to a blog, but I still need to create a GitHub repo for it and configure a pipeline to deploy the blog automatically to my personal website. If you\u0026rsquo;d rather, you could use GitHub Pages to host your blog for free.\n","permalink":"https://www.taylordeckard.me/blog/posts/hugo-tutorial/","summary":"As an introductory post, I\u0026rsquo;ll detail the steps to create a blog like this. It should only take a few minutes\u0026hellip;\nInstall Hugo Follow the steps here to install Hugo on your system. For me, on macOS, the command was:\nbrew install hugo Create a Site Next, you\u0026rsquo;ll want to use the hugo binary to create the project scaffolding for your site. Open up a terminal and enter the following command (substitute my_blog with the name of the directory you want to create the site in):","title":"Meta"}]